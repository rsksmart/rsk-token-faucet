{"version":3,"sources":["components/Address.tsx","components/row.tsx","rLogin.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Address","address","small","center","color","Typography","align","slice","Link","href","target","Launch","balanceToString","balance","decimals","parts","div","BigNumber","from","pow","mod","isZero","toString","Row","token","add","signer","faucet","contract","Contract","toLowerCase","useState","setBalance","setAddress","faucetBalance","setFaucetBalance","disable","setDisable","useEffect","a","getAddress","balanceOf","b","faucetB","Card","style","margin","padding","Grid","container","item","xs","src","logo","width","marginBottom","symbol","name","Button","size","disabled","onClick","dispense","rpcUrls","31","supportedChains","Object","keys","map","Number","rLogin","RLogin","addresses","contractMap","faucetAddress","App","mm","setMM","setFaucet","handleLogin","connect","provider","web3Provider","ethers","providers","Web3Provider","getSigner","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee3875d.chunk.js","sourcesContent":["import React from 'react'\nimport { Typography, Link } from '@mui/material'\nimport { Launch } from '@mui/icons-material'\n\nconst Address: React.FC<{ address: string, small: boolean, center: boolean, color?: string }> = ({ address, small, center, color }) => <Typography align={center ? 'center' : 'left'} color={color}>Address: {small ? `${address.slice(0, 8)}...${address.slice(-6)}` : address} <Link href={`https://explorer.testnet.rsk.co/address/${address}`} target='_blank'><Launch /></Link></Typography>\n\nexport default Address\n","import React, { useEffect, useState } from 'react'\nimport { Contract, Signer, BigNumber, BigNumberish } from 'ethers'\nimport { Button, Grid, Typography, Card } from '@mui/material'\nimport Address from './Address'\n\nconst Row: React.FC<{ token: any, add: string, signer: Signer, faucet: Contract }> = ({ token, add, signer, faucet }) => {\n  const baseDir =\n  'https://raw.githubusercontent.com/rsksmart/rsk-testnet-contract-metadata/master/images/'\n  const contractAbi = [\n    // Get the account balance\n    'function balanceOf(address) view returns (uint)'\n  ]\n  const contract = new Contract(add.toLowerCase(), contractAbi, signer)\n  const [balance, setBalance] = useState<any>(null)\n  const [address, setAddress] = useState('')\n  const [faucetBalance, setFaucetBalance] = useState<any>(null)\n  const [disable, setDisable] = useState(true)\n  useEffect(() => {\n    (async () => {\n      const a = await signer.getAddress()\n      const b = await contract.balanceOf(a)\n      const faucetB = await contract.balanceOf(faucet.address)\n      setBalance(b)\n      setAddress(a)\n      setFaucetBalance(faucetB)\n      if (faucetBalance > 0) {\n        setDisable(false)\n      }\n    })()\n  })\n\n  return (\n    <Card style={{ margin: '20px', padding: '20px' }}>\n      <Grid container>\n        <Grid item xs={3}>\n          <Typography><img src = {baseDir + token.logo} width=\"30px\" /><span style={{ marginBottom: '10px' }}>{token.symbol} ({token.name})</span></Typography>\n          <Address address={add} small={true} center={false}/>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography align='center'>Your Balance: {balance && balanceToString(balance, token.decimals)}</Typography>\n          <Typography align='center'>Faucet Balance: {faucetBalance && balanceToString(faucetBalance, token.decimals)}</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Button size='small' disabled={disable} onClick={() => faucet.dispense(add.toLowerCase(), address)}>Get Funds</Button>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n}\n\nexport const balanceToString = (balance: BigNumber, decimals: BigNumberish) => {\n  const parts = {\n    div: balance.div(BigNumber.from('10').pow(decimals)),\n    mod: balance.mod(BigNumber.from('10').pow(decimals))\n  }\n  if (parts.mod.isZero()) return parts.div.toString()\n  return `${parts.div.toString()}.${parts.mod.toString().slice(0, 4)}...`\n}\n\nexport default Row\n","import RLogin from '@rsksmart/rlogin'\n\nconst rpcUrls = {\n  31: 'https://public-node.testnet.rsk.co'\n}\n\nconst supportedChains = Object.keys(rpcUrls).map(Number)\n\nconst rLogin = new RLogin({\n  rpcUrls,\n  supportedChains\n})\n\nexport default rLogin\n","import React, { useState } from 'react'\nimport contractMap from '@rsksmart/rsk-testnet-contract-metadata'\nimport Row from './components/row'\nimport rLogin from './rLogin'\nimport { ethers, Contract } from 'ethers'\nimport { RifThemeProvider } from '@rsksmart/rif-material-ui'\nimport { Button, Typography } from '@mui/material'\nimport Address from './components/Address'\n\nconst addresses = Object.keys(contractMap)\n\nconst faucetAddress = '0x11f2753e9a597473da2f51492f4fefac1c572640'\n\nfunction App () {\n  const [mm, setMM] = useState<any>(null)\n  const [faucet, setFaucet] = useState<null | Contract>(null)\n  const handleLogin = async () => {\n    const { provider } = await rLogin.connect()\n    const web3Provider = new ethers.providers.Web3Provider(provider).getSigner()\n    const faucet = new Contract(faucetAddress, [\n      'function dispense(address token, address to)'\n    ], web3Provider)\n    setMM(web3Provider)\n    setFaucet(faucet)\n  }\n  return (\n    <RifThemeProvider>\n      <div style={{ padding: '20px' }}>\n        <Typography variant=\"h1\" align='center'>RSK Token Faucet</Typography>\n        <Typography variant=\"h4\" color=\"white\" align='center'>Get testing funds of your favourites tokens</Typography>\n        <Address small={false} address={faucetAddress} center={true} color=\"white\"/>\n        <Typography color=\"white\" align='center'>You can donate tokes to the faucet</Typography>\n        {(mm && faucet) && addresses.map((address: any) => <Row key={address} token = {contractMap[address]} add = {address} signer = {mm} faucet={faucet} />)}\n        <Button onClick = {handleLogin} >Log In</Button>\n        {mm && mm.toString()}\n      </div>\n    </RifThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}