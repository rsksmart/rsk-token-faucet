{"version":3,"sources":["rLogin.ts","components/Address.tsx","components/row.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rpcUrls","31","supportedChains","Object","keys","map","Number","rLogin","RLogin","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","bridge","portis","Portis","id","network","nodeUrl","chainId","torus","Torus","ledgerProviderOptions","dcentProviderOptions","trezorProviderOptions","manifestEmail","manifestAppUrl","Address","address","small","center","color","prefix","Typography","align","slice","Link","href","target","Launch","contractAbi","balanceToString","balance","decimals","parts","div","BigNumber","from","pow","mod","isZero","toString","Row","tokenMeta","tokenAddress","faucet","dispenseTo","useState","setUserAddress","userBalance","setUserBalance","faucetBalance","setFaucetBalance","disable","setDisable","tokenContract","Contract","toLowerCase","signer","provider","useEffect","a","getAddress","userAddress","balanceOf","gte","mul","Card","style","marginBottom","marginTop","padding","Grid","container","item","xs","src","logo","width","symbol","name","Button","size","disabled","onClick","dispense","erc20tokensKeys","entries","contractMap","reduce","prev","curr","erc20","faucetAddress","faucetContract","rnsResolver","Resolver","forRskTestnet","App","setFaucet","setDispenseTo","activeDispenseTo","setActiveDispenseTo","handleLogin","connect","web3Provider","ethers","providers","Web3Provider","getSigner","connectedFaucetContract","console","log","variant","height","label","onReceiverAddressChange","resolverFn","addr","bind","regexValidation","fontSize","Checkbox","checked","onChange","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be58c172.chunk.js","sourcesContent":["import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport Portis from '@portis/web3'\nimport Torus from '@toruslabs/torus-embed'\nimport { trezorProviderOptions } from '@rsksmart/rlogin-trezor-provider'\nimport { ledgerProviderOptions } from '@rsksmart/rlogin-ledger-provider'\nimport { dcentProviderOptions } from '@rsksmart/rlogin-dcent-provider'\n\nconst rpcUrls = {\n  31: 'https://public-node.testnet.rsk.co'\n}\n\nconst supportedChains = Object.keys(rpcUrls).map(Number)\n\nconst rLogin = new RLogin({\n  rpcUrls,\n  supportedChains,\n  cacheProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: rpcUrls,\n        bridge: 'https://walletconnect-bridge.rifos.org/'\n      }\n    },\n    portis: {\n      package: Portis,\n      options: {\n        id: 'a1c8672b-7b1c-476b-b3d0-41c27d575920',\n        network: {\n          nodeUrl: 'https://public-node.testnet.rsk.co',\n          chainId: 31\n        }\n      }\n    },\n    torus: {\n      package: Torus\n    },\n    'custom-ledger': ledgerProviderOptions,\n    'custom-dcent': dcentProviderOptions,\n    'custom-trezor': {\n      ...trezorProviderOptions,\n      options: {\n        manifestEmail: 'info@iovlabs.org',\n        manifestAppUrl: 'https://basic-sample.rlogin.identity.rifos.org/'\n      }\n    }\n  }\n})\n\nexport default rLogin\n","import React from 'react'\nimport { Typography, Link } from '@mui/material'\nimport { Launch } from '@mui/icons-material'\n\nconst Address: React.FC<{ address: string, small: boolean, center: boolean, color?: string, prefix?: string }> = ({ address, small, center, color, prefix }) => <Typography align={center ? 'center' : 'left'} color={color}>{prefix}Address: {small ? `${address.slice(0, 8)}...${address.slice(-6)}` : address} <Link href={`https://explorer.testnet.rsk.co/address/${address}`} target='_blank'><Launch /></Link></Typography>\n\nexport default Address\n","import React, { useEffect, useState } from 'react'\nimport { Contract, BigNumber, BigNumberish } from 'ethers'\nimport { Button, Grid, Typography, Card } from '@mui/material'\nimport { ITokenMetadata } from '@rsksmart/rsk-testnet-contract-metadata'\nimport Address from './Address'\n\nconst baseDir = 'https://raw.githubusercontent.com/rsksmart/rsk-testnet-contract-metadata/master/images/'\nconst contractAbi = [\n  // Get the account balance\n  'function balanceOf(address) view returns (uint)'\n]\n\nexport const balanceToString = (balance: BigNumber, decimals: BigNumberish) => {\n  const parts = {\n    div: balance.div(BigNumber.from('10').pow(decimals)),\n    mod: balance.mod(BigNumber.from('10').pow(decimals))\n  }\n  if (parts.mod.isZero()) return parts.div.toString()\n  return `${parts.div.toString()}.${parts.mod.toString().slice(0, 4)}...`\n}\n\nconst Row: React.FC<{ tokenMeta: ITokenMetadata[string], tokenAddress: string, faucet?: Contract, dispenseTo: string }> = ({ tokenMeta, tokenAddress, faucet, dispenseTo }) => {\n  const [userAddress, setUserAddress] = useState('')\n  const [userBalance, setUserBalance] = useState<any>(null)\n  const [faucetBalance, setFaucetBalance] = useState<any>(null)\n  const [disable, setDisable] = useState(true)\n\n  const tokenContract = !faucet ? new Contract(tokenAddress.toLowerCase(), contractAbi) : new Contract(tokenAddress.toLowerCase(), contractAbi, faucet.signer.provider)\n\n  useEffect(() => {\n    if (faucet) {\n      (async () => {\n        const userAddress = await faucet.signer.getAddress()\n        const userBalance = await tokenContract.balanceOf(userAddress)\n        const faucetBalance = await tokenContract.balanceOf(faucet.address)\n\n        setUserAddress(userAddress)\n        setUserBalance(userBalance)\n        setFaucetBalance(faucetBalance)\n\n        if (faucetBalance.gte(BigNumber.from('10').mul(BigNumber.from('10').pow(tokenMeta.decimals)))) {\n          setDisable(false)\n        }\n      })()\n    }\n  }, [faucet])\n\n  return (\n    <Card style={{ marginBottom: '20px', marginTop: '20px', padding: '20px' }}>\n      <Grid container>\n        <Grid item xs={3}>\n          <Typography><img src = {baseDir + tokenMeta.logo} width=\"30px\" /><span style={{ marginBottom: '10px' }}>{tokenMeta.symbol} ({tokenMeta.name})</span></Typography>\n          <Address address={tokenAddress} small={true} center={false}/>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography align='center'>Your Balance: {userBalance && balanceToString(userBalance, tokenMeta.decimals)}</Typography>\n          <Typography align='center'>Faucet Balance: {faucetBalance && balanceToString(faucetBalance, tokenMeta.decimals)}</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Button size='small' disabled={disable || !faucet} onClick={() => faucet!.dispense(tokenAddress.toLowerCase(), dispenseTo)}>Get Funds</Button>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n}\n\nexport default Row\n","import React, { useState } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport contractMap from '@rsksmart/rsk-testnet-contract-metadata'\nimport { RifThemeProvider, AddressField } from '@rsksmart/rif-material-ui'\nimport { Button, Typography, Grid, Checkbox } from '@mui/material'\nimport Resolver from '@rsksmart/rns-resolver.js'\n\nimport rLogin from './rLogin'\nimport Row from './components/row'\nimport Address from './components/Address'\n\nconst contractMapEntries = Object.entries(contractMap)\nconst erc20tokensKeys = contractMapEntries.reduce<any>((prev, curr) => {\n  if (curr[1].erc20) return [...prev, curr[0]]\n  else return prev\n}, [])\n\nconst faucetAddress = '0xea184604347fd5cede89217e1ab1eed322c8c98b'\nconst faucetContract = new Contract(faucetAddress, [\n  'function dispense(address token, address to)'\n])\n\nconst rnsResolver = Resolver.forRskTestnet({})\n\nfunction App () {\n  const [userAddress, setUserAddress] = useState('')\n  const [faucet, setFaucet] = useState<Contract>()\n\n  const [dispenseTo, setDispenseTo] = useState('')\n  const [activeDispenseTo, setActiveDispenseTo] = useState(true)\n\n  const handleLogin = async () => {\n    const { provider } = await rLogin.connect()\n    const web3Provider = new ethers.providers.Web3Provider(provider).getSigner()\n    const address = await web3Provider.getAddress()\n    const connectedFaucetContract = faucetContract.connect(web3Provider)\n\n    setUserAddress(address)\n    setFaucet(connectedFaucetContract)\n  }\n\n  console.log(activeDispenseTo)\n\n  return (\n    <RifThemeProvider>\n      <div style={{ padding: '20px' }}>\n        <Typography variant=\"h1\" align='center'>RSK Token Faucet</Typography>\n        <Typography variant=\"h4\" color=\"white\" align='center'>Get testing funds of your favorite tokens</Typography>\n        <Address small={false} address={faucetAddress} center={true} color=\"white\" prefix='Faucet ' />\n        <Typography color=\"white\" align='center'>You can donate tokes to the faucet</Typography>\n        <div style={{ height: '90px' }}>{!userAddress\n          ? <Button onClick={handleLogin} size='small' >Log In</Button>\n          : <Typography variant=\"h4\" color=\"white\" align='center'>Your address: {userAddress}</Typography>\n        }</div>\n        <Grid container>\n          <Grid item xs={9}>\n            <AddressField id='addressField' label='Dispense to' onReceiverAddressChange={setDispenseTo} resolverFn={rnsResolver.addr.bind(rnsResolver)} regexValidation={/\\.rsk$/} />\n          </Grid>\n          <Grid item xs={3} style={{ marginTop: '20px' }}>\n            <Typography color='white' fontSize='20px' align='center'><Checkbox color='primary' size='medium' checked={activeDispenseTo} onChange={e => setActiveDispenseTo(e.target.checked)} />Send to your connected address</Typography>\n          </Grid>\n        </Grid>\n        {erc20tokensKeys.map((tokenAddress: any) => <Row key={tokenAddress} tokenMeta={contractMap[tokenAddress]} tokenAddress={tokenAddress} faucet={faucet} dispenseTo={activeDispenseTo ? userAddress : dispenseTo.toLowerCase()} />)}\n      </div>\n    </RifThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}